
// ==========================  User Management Schema  ==========================
// This schema defines the User, Profile, and Post models for a user management system.
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


// ==========================  User Management Models  ==========================
// The User model represents a user in the system.

model Profile {
    id      Int    @id @default(autoincrement())
    bio     String @db.VarChar(500)
    user_id Int    @unique
    user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model User {
    id      Int      @id @default(autoincrement())
    name    String   @db.VarChar(255)
    email   String   @unique
    profile Profile?
    custom_id String? @unique
    password String? @db.VarChar(255)
    user_otp String? @unique
    verification_token String? @unique
    verification_token_expiry DateTime?
    reset_password_token String? @unique
    reset_password_token_expiry DateTime?
    email_verified Boolean @default(false)
    email_verification_token String? @unique
    email_verification_token_expiry DateTime?
    phone_number String? @unique
    phone_number_verified Boolean @default(false)
    phone_verification_token String? @unique
    phone_verification_token_expiry DateTime?
    login_token String? @unique
    login_token_expiry DateTime?
    is_active Boolean @default(true)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@index([email], name: "idx_user_email")
    Post Post[]
}

model Post {
    id        Int    @id @default(autoincrement())
    title     String @db.VarChar(255)
    content   String @db.Text
    author_id Int
    author    User   @relation(fields: [author_id], references: [id], onDelete: Cascade)
}

// ==========================  User Management Schema  ==========================