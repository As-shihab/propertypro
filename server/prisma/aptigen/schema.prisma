generator clientAptigen {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client-aptigen"
}

datasource aptigenDb {
  provider = "mysql"
  url      = env("APTIGEN_DATABASE_URL")
}

model cache {
  key        String @id @aptigenDb.VarChar(255)
  value      String @aptigenDb.MediumText
  expiration Int
}

model cache_locks {
  key        String @id @aptigenDb.VarChar(255)
  owner      String @aptigenDb.VarChar(255)
  expiration Int
}

model failed_jobs {
  id         BigInt   @id @default(autoincrement()) @aptigenDb.UnsignedBigInt
  uuid       String   @unique(map: "failed_jobs_uuid_unique") @aptigenDb.VarChar(255)
  connection String   @aptigenDb.Text
  queue      String   @aptigenDb.Text
  payload    String   @aptigenDb.LongText
  exception  String   @aptigenDb.LongText
  failed_at  DateTime @default(now()) @aptigenDb.Timestamp(0)
}

model job_batches {
  id             String  @id @aptigenDb.VarChar(255)
  name           String  @aptigenDb.VarChar(255)
  total_jobs     Int
  pending_jobs   Int
  failed_jobs    Int
  failed_job_ids String  @aptigenDb.LongText
  options        String? @aptigenDb.MediumText
  cancelled_at   Int?
  created_at     Int
  finished_at    Int?
}

model jobs {
  id           BigInt @id @default(autoincrement()) @aptigenDb.UnsignedBigInt
  queue        String @aptigenDb.VarChar(255)
  payload      String @aptigenDb.LongText
  attempts     Int    @aptigenDb.UnsignedTinyInt
  reserved_at  Int?   @aptigenDb.UnsignedInt
  available_at Int    @aptigenDb.UnsignedInt
  created_at   Int    @aptigenDb.UnsignedInt

  @@index([queue], map: "jobs_queue_index")
}

model location_types {
  id         BigInt    @id @default(autoincrement()) @aptigenDb.UnsignedBigInt
  active     Boolean   @default(true)
  custom_id  String    @aptigenDb.VarChar(255)
  name       String    @aptigenDb.VarChar(255)
  created_at DateTime? @aptigenDb.Timestamp(0)
  updated_at DateTime? @aptigenDb.Timestamp(0)
}

model migrations {
  id        Int    @id @default(autoincrement()) @aptigenDb.UnsignedInt
  migration String @aptigenDb.VarChar(255)
  batch     Int
}

model model_has_permissions {
  permission_id BigInt      @aptigenDb.UnsignedBigInt
  model_type    String      @aptigenDb.VarChar(255)
  model_id      BigInt      @aptigenDb.UnsignedBigInt
  permissions   permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "model_has_permissions_permission_id_foreign")

  @@id([permission_id, model_id, model_type])
  @@index([model_id, model_type], map: "model_has_permissions_model_id_model_type_index")
}

model model_has_roles {
  role_id    BigInt @aptigenDb.UnsignedBigInt
  model_type String @aptigenDb.VarChar(255)
  model_id   BigInt @aptigenDb.UnsignedBigInt
  roles      roles  @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "model_has_roles_role_id_foreign")

  @@id([role_id, model_id, model_type])
  @@index([model_id, model_type], map: "model_has_roles_model_id_model_type_index")
}

model permissions {
  id                    BigInt                  @id @default(autoincrement()) @aptigenDb.UnsignedBigInt
  name                  String                  @aptigenDb.VarChar(255)
  guard_name            String                  @aptigenDb.VarChar(255)
  created_at            DateTime?               @aptigenDb.Timestamp(0)
  updated_at            DateTime?               @aptigenDb.Timestamp(0)
  model_has_permissions model_has_permissions[]
  role_has_permissions  role_has_permissions[]

  @@unique([name, guard_name], map: "permissions_name_guard_name_unique")
}

model personal_access_tokens {
  id             BigInt    @id @default(autoincrement()) @aptigenDb.UnsignedBigInt
  tokenable_type String    @aptigenDb.VarChar(255)
  tokenable_id   BigInt    @aptigenDb.UnsignedBigInt
  name           String    @aptigenDb.VarChar(255)
  token          String    @unique(map: "personal_access_tokens_token_unique") @aptigenDb.VarChar(64)
  abilities      String?   @aptigenDb.Text
  last_used_at   DateTime? @aptigenDb.Timestamp(0)
  expires_at     DateTime? @aptigenDb.Timestamp(0)
  created_at     DateTime? @aptigenDb.Timestamp(0)
  updated_at     DateTime? @aptigenDb.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model role_has_permissions {
  permission_id BigInt      @aptigenDb.UnsignedBigInt
  role_id       BigInt      @aptigenDb.UnsignedBigInt
  permissions   permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_has_permissions_permission_id_foreign")
  roles         roles       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_has_permissions_role_id_foreign")

  @@id([permission_id, role_id])
  @@index([role_id], map: "role_has_permissions_role_id_foreign")
}

model roles {
  id                   BigInt                 @id @default(autoincrement()) @aptigenDb.UnsignedBigInt
  name                 String                 @aptigenDb.VarChar(255)
  guard_name           String                 @aptigenDb.VarChar(255)
  created_at           DateTime?              @aptigenDb.Timestamp(0)
  updated_at           DateTime?              @aptigenDb.Timestamp(0)
  model_has_roles      model_has_roles[]
  role_has_permissions role_has_permissions[]

  @@unique([name, guard_name], map: "roles_name_guard_name_unique")
}

model users {
  id                              BigInt    @id @default(autoincrement()) @aptigenDb.UnsignedBigInt
  name                            String    @aptigenDb.VarChar(255)
  email                           String    @unique(map: "users_email_unique") @aptigenDb.VarChar(255)
  custom_id                       String?   @unique(map: "users_custom_id_unique") @aptigenDb.VarChar(255)
  password                        String    @aptigenDb.VarChar(255)
  user_otp                        String?   @unique(map: "users_user_otp_unique") @aptigenDb.VarChar(255)
  verification_token              String?   @unique(map: "users_verification_token_unique") @aptigenDb.VarChar(255)
  verification_token_expiry       DateTime? @aptigenDb.DateTime(0)
  reset_password_token            String?   @unique(map: "users_reset_password_token_unique") @aptigenDb.VarChar(255)
  reset_password_token_expiry     DateTime? @aptigenDb.DateTime(0)
  email_verified                  Boolean   @default(false)
  email_verification_token        String?   @unique(map: "users_email_verification_token_unique") @aptigenDb.VarChar(255)
  email_verification_token_expiry DateTime? @aptigenDb.DateTime(0)
  phone_number                    String?   @unique(map: "users_phone_number_unique") @aptigenDb.VarChar(255)
  phone_number_verified           Boolean   @default(false)
  phone_verification_token        String?   @unique(map: "users_phone_verification_token_unique") @aptigenDb.VarChar(255)
  phone_verification_token_expiry DateTime? @aptigenDb.DateTime(0)
  login_token                     String?   @unique(map: "users_login_token_unique") @aptigenDb.VarChar(255)
  login_token_expiry              DateTime? @aptigenDb.DateTime(0)
  is_active                       Boolean   @default(true)
  created_at                      DateTime? @aptigenDb.Timestamp(0)
  updated_at                      DateTime? @aptigenDb.Timestamp(0)

  @@index([email], map: "idx_user_email")
}
